# -*- coding: utf-8 -*-
"""DishapShrestha_2409012_Workshop2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pV8o7h1HfEoySJTrRRKe9yxOfVWsXPML
"""



from google.colab import drive
drive.mount('/content/drive')
import pandas as pd

"""Problem 1 - Data Read, Write and Inspect:
Complete all following Task:
• Dataset for the Task: "bank.csv"
1. Load the provided dataset and import in pandas DataFrame.
2. Check info of the DataFrame and identify following:
(a) columns with dtypes=object
(b) unique values of those columns.
(c) check for the total number of null values in each column.
3. Drop all the columns with dtypes object and store in new DataFrame, also write the DataFrame in
”.csv” with name ”banknumericdata.csv”
4. Read ”banknumericdata.csv” and Find the summary statistics.
"""



dataSet=pd.read_csv('/bank .csv')
object_columns = dataSet.select_dtypes(include=['object']).columns #.column gives the name of the column
print(object_columns)

for col in object_columns:
    print(f"\nUnique values in column '{col}':")
    print(dataSet[col].unique())#returns the unique value for each col

null_counts = dataSet.isnull().sum()
'''isnull creates a seperate dataset if the NaN is found in any cell, True goes there
else false goes into the cell and .sum() calculates all the 1 (isNull=true) value and adds it.'''
print("\nTotal number of null values in each column:")
print(null_counts)

allobjects=dataSet.select_dtypes(exclude=['object'])
allobjects.to_csv('banknumericdata.csv', index=False)

readcsv=pd.read_csv('banknumericdata.csv')
summary_stats = readcsv.describe()

print("\nSummary statistics:")
print(summary_stats)

"""Complete all the following Task:
• Dataset for the Task: "medical_student.csv"
1. Load the provided dataset and import in pandas DataFrame.
2. Check info of the DataFrame and identify column with missing (null) values.
3. For the column with missing values fill the values using various techniques we discussed above. Try
to explain why did you select the particular methods for particular column.
4. Check for any duplicate values present in Dataset and do necessary to manage the duplicate items.
{Hint: dataset.duplicated.sum()}
"""

df=pd.read_csv('/content/drive/MyDrive/Concept and Technologies of AI/medical_students_dataset.csv')
print(df.info())
print(df.isnull().sum())

df['Age'] = df['Age'].fillna(df['Age'].mean())
df['Height']=df['Height'].fillna(df['Height'].mean())
df['Weight']=df['Weight'].fillna(df['Weight'].mean())
df['Blood Pressure']=df['Blood Pressure'].fillna(df['Blood Pressure'].mean())

#I use .mean() as a fillup mean as middle value it may suit all the value.

duplicatedSets=df.duplicated().sum()
print("The Duplicated Sets are:",duplicatedSets)

"""Dataset Used: "titanic.csv"

Problem - 1:

Create a DataFrame that is subsetted for the columns ’Name’, ’Pclass’, ’Sex’, ’Age’, ’Fare’, and ’Survived’.
Retain only those rows where ’Pclass’ is equal to 1, representing first-class passengers. What is the mean,
median, maximum value, and minimum value of the ’Fare’ column?

Problem - 2:

How many null values are contained in the ’Age’ column in your subsetted DataFrame? Once you’ve found
this out, drop them from your DataFrame.
Problem - 3:

The ’Embarked’ column in the Titanic dataset contains categorical data representing the ports of embarka-
tion:

• ’C’ for Cherbourg
• ’Q’ for Queenstown
• ’S’ for Southampton
Task:
1. Use one-hot encoding to convert the ’Embarked’ column into separate binary columns (’Embarked C’,
’Embarked Q’, ’Embarked S’).
2. Add these new columns to the original DataFrame.
3. Drop the original ’Embarked’ column.
4. Print the first few rows of the modified DataFrame to verify the changes.
Problem - 4:

Compare the mean survival rates (’Survived’) for the different groups in the ’Sex’ column. Draw a visual-
ization to show how the survival distributions vary by gender.

Problem - 5:

Draw a visualization that breaks your visualization from Exercise 3 down by the port of embarkation (’Em-
barked’). In this instance, compare the ports ’C’ (Cherbourg), ’Q’ (Queenstown), and ’S’ (Southampton).
"""

df=pd.read_csv('/content/drive/MyDrive/Concept and Technologies of AI/DataSet/Titanic-Dataset.csv')
subsettled_df=df[['Name','Pclass','Sex','Age','Fare','Survived']]
first_class_passengers=subsettled_df[subsettled_df['Pclass']==1]

print("The mean of the first class pessenger's fare:",first_class_passengers['Fare'].mean())
print("The median of the first class pessenger's fare:",first_class_passengers['Fare'].median())
print("The max value of the first class pessenger's fare:",first_class_passengers['Fare'].max())
print("The min value of the first class pessenger's fare:",first_class_passengers['Fare'].min())

#Problem2
print("The null value in age is:",subsettled_df['Age'].isnull().sum())
subsettled_df=subsettled_df.dropna(subset=['Age'])
print("Clearing the null data!")
print(subsettled_df.isnull().sum())

#Problem3
#1
df_encoded=pd.get_dummies(df,columns=['Embarked'],prefix=['Embarked'])
# print(df_encoded.head())
# print(df.head())

#2
df_combined=pd.concat([df,df_encoded],axis=1)
print(df_combined.head())

#3 & 4
df_wo_embarked=df_combined.drop('Embarked',axis=1)
print(df_wo_embarked.head())

#problem 4
import matplotlib.pyplot as plt
import seaborn as sns

mean_survival_rate_male=df[df['Sex']=='male']['Survived'].mean()
mean_survival_rate_female=df[df['Sex']=='female']['Survived'].mean()

print(mean_survival_rate_male)
print(mean_survival_rate_female)

plt.figure(figsize=(8,6))
sns.barplot(x='Sex',y='Survived',data=df)

#problem5
import matplotlib.pyplot as plt
import seaborn as sns

# Create a barplot comparing survival rates by Sex and Embarked port
plt.figure(figsize=(8, 6))
sns.barplot(x='Sex', y='Survived', hue='Embarked', data=df)


plt.xlabel('Sex')
plt.ylabel('Survival Rate')
plt.title('Survival Rate by Sex and Embarkation Port')
plt.show()